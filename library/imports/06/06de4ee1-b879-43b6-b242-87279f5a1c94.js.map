{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAI,UAAU,GAAG,SAAb,UAAU,GAAe;AAC5B,KAAI,MAAG,GAAG,IAAI,CAAC;AACf,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAChB,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAClB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC;CACjB,CAAC;AACF,IAAI,IAAI,GAAG,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;AACpC,OAAM,EAAE,CAAC;AACT,OAAM,EAAE,CAAC;CACT,CAAC,CAAA;AACF,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE;AACjC,MAAK,EAAE,iBAAY;AAClB,MAAI,CAAC,OAAO,GAAG,IAAI,MAAG,CAAC;EACvB;;AAED,QAAO,EAAE,iBAAU,EAAE,EAAE;AACtB,SAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;EACtB;;AAED,aAAY,EAAE,sBAAU,IAAI,EAAE,MAAM,EAAE;AACrC,MAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACtC,MAAI,MAAM,KAAK,CAAC,CAAC,EAAE;AAClB,SAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AAC3B,OAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GACtB;AACD,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC;AACjB,OAAI,EAAE,IAAI,CAAC,MAAM;AACjB,OAAI,EAAE,MAAM;AACZ,SAAM,EAAE,MAAM;GACd,CAAC,CAAC;EACH;;AAED,aAAY,EAAE,sBAAU,OAAO,EAAE;AAChC,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC;AACjB,OAAI,EAAE,IAAI,CAAC,MAAM;AACjB,UAAO,EAAE,OAAO;GAChB,CAAC,CAAA;EACF;;AAED,KAAI,EAAE,gBAAY;AACjB,MAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACxC,MAAI,CAAC,OAAO,EAAE,CAAC;AACf,SAAO,MAAM,CAAC;EACd;CACD,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "var DialogData = function () {\n\tthis.in = null;\n\tthis.roles = [];\n\tthis.phrases = [];\n\tthis.sequence = null;\n\tthis.current = 0;\n};\nvar TYPE = DialogData.Type = cc.Enum({\n\tPHRASE: 0,\n\tOPTION: 1\n})\ncc.js.mixin(DialogData.prototype, {\n\tstart: function () {\n\t\tthis.current = this.in;\n\t},\n\t\n\tgetRole: function (id) {\n\t\treturn this.roles[id];\n\t},\n\n\tappendPhrase: function (role, phrase) {\n\t\tvar roleid = this.roles.indexOf(role);\n\t\tif (roleid === -1) {\n\t\t\troleid = this.roles.length;\n\t\t\tthis.roles.push(role);\n\t\t}\n\t\tthis.phrases.push({\n\t\t\ttype: TYPE.PHRASE,\n\t\t\trole: roleid,\n\t\t\tphrase: phrase\n\t\t});\n\t},\n\n\tappendOption: function (options) {\n\t\tthis.phrases.push({\n\t\t\ttype: TYPE.OPTION,\n\t\t\toptions: options\n\t\t})\n\t},\n\n\tnext: function () {\n\t\tvar phrase = this.phrases[this.current];\n\t\tthis.current++;\n\t\treturn phrase;\n\t}\n});\n\nmodule.exports = DialogData;"
  ]
}