{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;AACR,aAAK,EAAE,CAAC;AACR,eAAO,EAAE,CAAC;AACV,gBAAQ,EAAE,CAAC;KACd;;;AAGD,UAAM,EAAE,kBAAW;AACf,YAAI,IAAI,GAAG,IAAI,CAAC;;;;;;AAMhB,YAAI,CAAC,aAAa,GAAG,CAAC,CAAC;AACvB,YAAI,CAAC,UAAU,GAAG,CAAC,CAAC;;AAEpB,YAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,UAAS,KAAK,EAAE;AACtD,gBAAI,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,GAAG,EAAE;AAC3B,kBAAE,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;;AAErB,oBAAI,WAAW,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AAC/D,2BAAW,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrC,oBAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;;AAErC,oBAAI,CAAC,UAAU,EAAE,CAAC;AAClB,oBAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,OAAO,EAAE;AAClC,wBAAI,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;AACtB,wBAAI,CAAC,UAAU,GAAG,CAAC,CAAC;;AAEpB,wBAAI,CAAC,YAAY,CAAC,YAAW;AACzB,4BAAI,CAAC,IAAI,EAAE,CAAC;AACZ,4BAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;qBAC3B,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACrB;aAEJ;SAEJ,CAAC,CAAC;KAEN;AACD,QAAI,EAAE,gBAAW;AACb,YAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,EAAE,CAAA,GAAI,IAAI,CAAC,MAAM,EAAE,CAAC;AAC7E,YAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;KACnB;;AAED,eAAW,EAAE,uBAAW;AACpB,YAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;;AAEtD,YAAI,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,GAAG,EAAE,EAAE;;AAE/B,aAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC;AAC9B,gBAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;AACzC,cAAE,CAAC,GAAG,CAAC,kBAAkB,GAAG,CAAC,GAAG,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;SAC3E;AACD,YAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,GAAG,EAAE,EAAE;;AAEhC,aAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC;AAC/B,gBAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;SAC5C;AACD,YAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;KACnB;;;AAGD,UAAM,EAAE,gBAAS,EAAE,EAAE;AACjB,YAAI,CAAC,WAAW,EAAE,CAAC;KACtB;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        speed: 1,\r\n        lurePer: 1,\r\n        interval: 5\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function() {\r\n        let self = this;\r\n        //行为：1.开始时出现在横轴的某个点\r\n        //2.向一个方式移动，移动形式可能是随机的\r\n        //3.不会移出屏幕\r\n        //4.点击后，放下一（多）个饵，然后这个大饵消失\r\n        //5.当一定时间间隔后再出现（暂定）\r\n        this.moveDirection = 1;\r\n        this.throwCount = 0;\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_END, function(event) {\r\n            if (self.node.opacity === 255) {\r\n                cc.log('throw_lure');\r\n                //发出事件\r\n                let eventCustom = new cc.Event.EventCustom('throw_lure', true);\r\n                eventCustom.setUserData(self.node.x);\r\n                self.node.dispatchEvent(eventCustom);\r\n                //计量\r\n                self.throwCount++;\r\n                if (self.throwCount === self.lurePer) {\r\n                    self.node.opacity = 0;\r\n                    self.throwCount = 0;\r\n                    //下次出现时间\r\n                    self.scheduleOnce(function() {\r\n                        self.init();\r\n                        self.node.opacity = 255;\r\n                    }, self.interval);\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n    },\r\n    init: function() {\r\n        let x = -cc.winSize.width / 2 + 50 + (cc.winSize.width - 50) * Math.random();\r\n        this.node.x = x;\r\n    },\r\n\r\n    strategyRun: function() {\r\n        let x = this.node.x + this.speed * this.moveDirection;\r\n\r\n        if (x > cc.winSize.width / 2 - 50) {\r\n\r\n            x = cc.winSize.width / 2 - 50;\r\n            this.moveDirection = -this.moveDirection;\r\n            cc.log('turn left and x:' + x + ' moveDirection:' + this.moveDirection);\r\n        }\r\n        if (x < -cc.winSize.width / 2 + 50) {\r\n\r\n            x = -cc.winSize.width / 2 + 50;\r\n            this.moveDirection = -this.moveDirection;\r\n        }\r\n        this.node.x = x;\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function(dt) {\r\n        this.strategyRun();\r\n    },\r\n});"
  ]
}