{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        star1: cc.Node,\r\n        star2: cc.Node,\r\n        star3: cc.Node,\r\n        lock: cc.Node,\r\n        stageString: cc.Node,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function() {\r\n\r\n    },\r\n    init: function(stageData) {\r\n            let self = this;\r\n            this.stage = stageData.stage;\r\n            this.stageString.getComponent(cc.Label).string = \"第\" + this.stage + \"关\";\r\n            let stageStorage = cc.sys.localStorage.getItem('stage' + this.stage);\r\n            if (stageStorage) {\r\n                let score = JSON.parse(stageStorage).bestScore;\r\n                if (score >= stageData.star1) {\r\n                    this.star1.color = new cc.Color(255, 255, 255);\r\n                } else {\r\n                    this.star1.color = new cc.Color(100, 100, 100);\r\n                }\r\n                if (score >= stageData.star2) {\r\n                    this.star2.color = new cc.Color(255, 255, 255);\r\n                } else {\r\n                    this.star2.color = new cc.Color(100, 100, 100);\r\n                }\r\n                if (score >= stageData.star3) {\r\n                    this.star3.color = new cc.Color(255, 255, 255);\r\n                } else {\r\n                    this.star3.color = new cc.Color(100, 100, 100);\r\n                }\r\n                this.lock.active = false;\r\n            } else {\r\n                this.star1.color = new cc.Color(100, 100, 100);\r\n                this.star2.color = new cc.Color(100, 100, 100);\r\n                this.star3.color = new cc.Color(100, 100, 100);\r\n                this.star1.active = false;\r\n                this.star2.active = false;\r\n                this.star3.active = false;\r\n                this.lock.active = true;\r\n            }\r\n\r\n            if (self.stage === 1 ) {\r\n                this.lock.active = false;\r\n                this.star1.active = true;\r\n                this.star2.active = true;\r\n                this.star3.active = true;\r\n\r\n            }\r\n            this.node.on(cc.Node.EventType.TOUCH_END, function(event) {\r\n                if (!self.lock.active) {\r\n                    let select_event = new cc.Event.EventCustom('select_stage', true);\r\n                    //把选中的关放出去\r\n                    select_event.setUserData(self.stage);\r\n                    self.node.dispatchEvent(select_event);\r\n                    //self.node.active=false;\r\n                }\r\n            });\r\n        }\r\n        // called every frame, uncomment this function to activate update callback\r\n        // update: function (dt) {\r\n\r\n    // },\r\n});"
  ]
}