{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAI,aAAa,GAAG,EAAE,CAAC,IAAI,CAAC;AACxB,QAAI,EAAE,CAAC;AACP,WAAO,EAAE,CAAC;AACV,QAAI,EAAE,CAAC;AACP,UAAM,EAAE,CAAC;CACZ,CAAC,CAAC;AACH,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;AAER,iBAAS,EAAE,GAAG;AACd,gBAAQ,EAAE,EAAE;AACZ,aAAK,EAAE,EAAE;AACT,kBAAU,EAAE,CAAC;AACb,iBAAS,EAAE,CAAC;AACZ,gBAAQ,EAAE,KAAK;AACf,YAAI,EAAE,EAAE,CAAC,IAAI;AACb,YAAI,EAAE;AACF,gBAAI,EAAE,EAAE,CAAC,IAAI;AACb,uBAAS,IAAI;SAChB;KACJ;;AAED,UAAM,EAAE,kBAAW;AACf,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,YAAI,CAAC,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC;;;;;;;;;AASrC,UAAE,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC3E,UAAE,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;;AAEvE,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;AAC5C,YAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1B,YAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;;;AAG3C,YAAI,CAAC,QAAQ,CAAC,YAAW;AACrB,cAAE,CAAC,GAAG,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;;AAEzC,gBAAI,IAAI,CAAC,UAAU,KAAK,aAAa,CAAC,IAAI,EAAE;;AAExC,oBAAI,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,EAC9B,IAAI,CAAC,SAAS,EAAE,CAAC;aACxB;SACJ,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;KACtC;AACD,QAAI,EAAE,cAAS,UAAU,EAAE;;AAEvB,UAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACb,UAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;;;AAI9B,YAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAChB,gBAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SAC5B;AACD,UAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;AAC3B,UAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;KAE5B;;AAED,WAAO,EAAA,mBAAG;AACN,UAAE,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC5E,UAAE,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;KAC3E;;AAED,aAAS,EAAE,mBAAS,KAAK,EAAE;AACvB,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,YAAI,iBAAiB,GAAG,CAAC,CAAC;AAC1B,YAAI,KAAK,CAAC,OAAO,KAAK,IAAI,CAAC,aAAa,EAAE;AACtC,oBAAQ,KAAK,CAAC,OAAO;AACjB,qBAAK,EAAE,CAAC,GAAG,CAAC,IAAI;;;AAGZ,qCAAiB,GAAG,GAAG,CAAC;;AAExB,0BAAM;AAAA,AACV,qBAAK,EAAE,CAAC,GAAG,CAAC,KAAK;;AAEb,qCAAiB,GAAG,EAAE,CAAC;;AAEvB,0BAAM;AAAA,AACV,qBAAK,EAAE,CAAC,GAAG,CAAC,EAAE;;AAEV,qCAAiB,GAAG,CAAC,CAAC;;AAEtB,0BAAM;AAAA,AACV,qBAAK,EAAE,CAAC,GAAG,CAAC,IAAI;AACZ,qCAAiB,GAAG,GAAG,CAAC;AACxB,0BAAM;AAAA,AACV,qBAAK,EAAE,CAAC,GAAG,CAAC,KAAK;;AAEb,wBAAI,CAAC,SAAS,EAAE,CAAC;AACjB,2BAAO;;AAAA,aAKd;AACD,cAAE,CAAC,GAAG,CAAC,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;AACnD,gBAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SACxD;;;AAGD,YAAI,CAAC,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC;KACtC;AACD,cAAU,EAAE,oBAAS,MAAM,EAAE,IAAI,EAAE;AAC/B,YAAI,KAAK,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AAC9B,YAAI,KAAK,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;;AAE9B,YAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC/C,YAAI,KAAK,GAAG,CAAC,CAAC;AACd,YAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;AACxB,iBAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SAClD,MAAM,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;AAC/B,iBAAK,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;SAClD,MAAM,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;AAC/B,iBAAK,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACnD,MAAM,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;AAC/B,iBAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SAClD;AACD,eAAO,KAAK,CAAC;KAChB;AACD,aAAS,EAAE,qBAAW;;;AAElB,YAAI,IAAI,CAAC,IAAI,EAAE;;AACX,oBAAI,CAAC,MAAK,IAAI,CAAC,OAAO,EAAE;AACpB,0BAAK,YAAY,EAAE,CAAC;iBACvB;AACD,oBAAI,MAAK,IAAI,IAAI,SAAS,IAAI,CAAC,MAAK,IAAI,IAAI,MAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAK,IAAI,CAAC,OAAO,EAAE;;AAElF,0BAAK,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC;AACrC;;sBAAO;iBACV;;AAED,kBAAE,CAAC,GAAG,CAAC,YAAY,GAAG,MAAK,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,MAAK,IAAI,CAAC,CAAC,CAAC,CAAC;AAC1D,oBAAI,IAAI,QAAO,CAAC;;;;;;;;;;;;;;;AAehB,oBAAI,KAAK,GAAG,MAAK,UAAU,CAAC,MAAK,IAAI,EAAE,MAAK,IAAI,CAAC,CAAC;;;AAGlD,oBAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,MAAK,KAAK,CAAC;AACtC,oBAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,MAAK,KAAK,CAAC;;;AAGtC,oBAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAS,MAAM,EAAE,GAAG,EAAE;;AAE7C,wBAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;;AAE3B,wBAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;;AAEnB,4BAAI,CAAC,SAAS,EAAE,CAAC;qBACpB,MAAM;;AAEH,4BAAI,YAAY,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AAC1D,4BAAI,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AAC/B,gCAAI,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;;;;yBAIzC,MAAM;AACH,oCAAI,CAAC,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC;6BACxC;qBAEJ;iBACJ,SAAQ,CAAC,CAAC,CAAC;;AAEZ,oBAAI,QAAQ,GAAG,EAAE,CAAC,SAAS,CAAC,MAAK,IAAI,CAAC,WAAW,EAAE,EAAE,MAAK,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;AAC9E,oBAAI,KAAK,GAAG,MAAK,QAAQ,GAAG,GAAG,CAAC;AAChC,oBAAI,QAAQ,GAAG,GAAG,EAAE;AAChB,yBAAK,GAAG,MAAK,QAAQ,GAAG,IAAI,CAAC;iBAChC;AACD,oBAAI,QAAQ,GAAG,EAAE,EAAE;AACf,yBAAK,GAAG,MAAK,QAAQ,GAAG,IAAI,CAAC;iBAChC;AACD,kBAAE,CAAC,GAAG,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC;AAC7B,oBAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;AAC7C,oBAAI,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,MAAK,IAAI,CAAC,CAAC;AAC/C,sBAAK,IAAI,CAAC,cAAc,EAAE,CAAC;;;;;;;;;;;;;;;;;;;AAmB3B,sBAAK,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;;;;;;AAO7E;;kBAAO;;;;SACV,MAAM;AACH,gBAAI,CAAC,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC;AACrC,mBAAO;SACV;KACJ;;AAED,aAAS,EAAE,qBAAW;AAClB,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,YAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AACjE,YAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,CAAA,GAAI,IAAI,CAAC,MAAM,EAAE,CAAC;AAC3E,YAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,CAAA,AAAC,CAAC;AACxD,UAAE,CAAC,GAAG,CAAC,kBAAkB,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM,GAAG,KAAK,CAAC,CAAC;AAC1D,YAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;AAE1C,YAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAS,MAAM,EAAE,GAAG,EAAE;AAC7C,gBAAI,CAAC,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC;SACxC,CAAC,CAAC;AACH,YAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AACnD,UAAE,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC;;AAEzB,YAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;AAC5D,YAAI,CAAC,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC;AACvC,YAAI,YAAY,GAAG,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;AACrE,oBAAY,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;;AAE1C,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;KAGrC;;AAED,gBAAY,EAAE,sBAAS,KAAK,EAAE;AAC1B,YAAI,KAAK,KAAK,IAAI,EAAE;AAChB,iBAAK,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;AACrD,cAAE,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;SACpC;AACD,UAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACjB,UAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACd,YAAI,CAAC,KAAK,EAAE;AACR,cAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC1B,mBAAO;SACV;AACD,YAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AAClB,gBAAI,CAAC,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC;SACxC;AACD,YAAI,QAAQ,GAAG,IAAI,CAAC;;AAEpB,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnC,gBAAI,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;AAC9E,gBAAI,QAAQ,GAAG,SAAS,EAAE;AACtB,wBAAQ,GAAG,SAAS,CAAC;AACrB,oBAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;aACxB;SAEJ;AACD,UAAE,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,YAAI,CAAC,SAAS,EAAE,CAAC;KACpB;;AAED,iBAAa,EAAE,uBAAS,iBAAiB,EAAE,IAAI,EAAE;AAC7C,YAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC7B,YAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;AAE7B,YAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC;AACnD,gBAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,CAAC;AACrC,YAAI,EAAE,GAAG,CAAC,CAAC;AACX,YAAI,EAAE,GAAG,CAAC,CAAC;AACX,gBAAQ,IAAI;;AAER,iBAAK,EAAE,CAAC,GAAG,CAAC,IAAI;AACZ,kBAAE,GAAG,CAAC,GAAG,EAAE,CAAC;AACZ,sBAAM;AAAA,AACV,iBAAK,EAAE,CAAC,GAAG,CAAC,KAAK;AACb,kBAAE,GAAG,CAAC,GAAG,EAAE,CAAC;AACZ,sBAAM;AAAA,AACV,iBAAK,EAAE,CAAC,GAAG,CAAC,EAAE;AACV,kBAAE,GAAG,CAAC,GAAG,EAAE,CAAC;AACZ,sBAAM;AAAA,AACV,iBAAK,EAAE,CAAC,GAAG,CAAC,IAAI;AACZ,kBAAE,GAAG,CAAC,GAAG,EAAE,CAAC;AACZ,sBAAM;AAAA,SACb;;AAED,YAAI,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AAC5C,gBAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;;AAEpC,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;KACrD;;AAED,iBAAa,EAAE,uBAAS,iBAAiB,EAAE;AACvC,YAAI,CAAC,UAAU,GAAG,aAAa,CAAC,OAAO,CAAC;AACxC,YAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;AACzC,YAAI,CAAC,YAAY,GAAG,iBAAiB,CAAC;AACtC,YAAI,CAAC,SAAS,GAAG,CAAC,CAAC;;AAEnB,YAAI,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC;AACrD,YAAI,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK,GAAG,EAAE,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC;AACzE,YAAI,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;;AAEjD,YAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,GAAG,EAAE;AACzD,gBAAI,CAAC,aAAa,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;;AAE7E,gBAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;SACpC,MAAM;AACH,gBAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;SAC1E;;;;;KAKJ;;AAED,WAAO,EAAE,iBAAS,KAAK,EAAE;AACrB,YAAI,KAAK,CAAC,OAAO,KAAK,IAAI,CAAC,aAAa,EAAE;AACtC,gBAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC7B;KACJ;;AAED,oBAAgB,EAAE,0BAAS,KAAK,EAAE,IAAI,EAAE;AACpC,YAAI,KAAK,CAAC,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE;AAC/B,cAAE,CAAC,GAAG,CAAC,kBAAkB,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9C,cAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;;;AAGd,gBAAI,IAAI,CAAC,aAAa,KAAK,SAAS,EAAE;AAClC,oBAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,oBAAI,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC/B,qBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,4BAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpE;AACD,oBAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;AAC9B,kBAAE,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;aACpC;;AAED,gBAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAChC;AACD,YAAI,KAAK,CAAC,IAAI,CAAC,KAAK,KAAK,OAAO,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE;AACjE,cAAE,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AAChC,gBAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,gBAAI,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC/B,iBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,wBAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aACpE;AACD,gBAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;SAChC;AACD,YAAG,KAAK,CAAC,IAAI,CAAC,KAAK,KAAK,OAAO,EAAC;;AAE5B,gBAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAC,IAAI,EAAC,GAAG,EAAC,IAAI,EAAC,EAAE,CAAC,CAAC;SACjD;KAEJ;;AAED,eAAW,EAAE,qBAAS,KAAK,EAAE,SAAS,EAAE,eAAe,EAAE,WAAW,EAAC,KAAK,EAAE;;;AACxE,YAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,YAAI,IAAI,CAAC,UAAU,KAAK,aAAa,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,KAAK,aAAa,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,KAAK,aAAa,CAAC,IAAI,EAAE;;;;;;;AAM9H,oBAAI,OAAO,GAAI,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AACxC,oBAAI,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AACvC,oBAAG,KAAK,EAAC;AACL,2BAAO,GAAG,KAAK,GAAC,IAAI,CAAC,MAAM,EAAE,CAAC;AAC9B,2BAAO,GAAG,KAAK,GAAC,IAAI,CAAC,MAAM,EAAE,CAAC;iBACjC;;AAED,oBAAI,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC;AACrC,oBAAI,CAAC,YAAA;oBAAE,CAAC,YAAA,CAAC;AACT,oBAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;;AAExB,qBAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC;iBAG7B,MAAM;AACH,yBAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC;qBAC7B;AACD,oBAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;AACxB,qBAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC;iBAC7B,MAAM;AACH,yBAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC;qBAC7B;;AAED,kBAAE,CAAC,GAAG,CAAC,wBAAwB,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;;AAI/C,oBAAI,KAAK,GAAG,OAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,CAAA,AAAC,CAAC;AACxD,oBAAI,SAAS,EAAE,KAAK,GAAG,SAAS,CAAC;AACjC,oBAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;;;;;;;AAQ1C,oBAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAS,MAAM,EAAE,GAAG,EAAE;AAC7C,wBAAI,cAAc,KAAK,aAAa,CAAC,MAAM,EAAE;AACzC,4BAAI,CAAC,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC;qBACxC;AACD,wBAAI,cAAc,KAAK,aAAa,CAAC,IAAI,EAAE;AACvC,4BAAI,CAAC,UAAU,GAAG,cAAc,CAAC;;;AAGjC,4BAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;;qBAE3B;iBAEJ,CAAC,CAAC;AACH,kBAAE,CAAC,GAAG,CAAC,cAAc,GAAG,OAAK,UAAU,CAAC,OAAK,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,OAAK,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,OAAK,IAAI,CAAC,CAAC,CAAC;AAChJ,oBAAI,KAAK,GAAG,OAAK,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,OAAK,IAAI,CAAC,CAAC;;AAEnD,oBAAI,WAAW,GAAG,OAAK,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;AACxD,oBAAI,eAAe,EAAE,WAAW,GAAG,eAAe,CAAC;AACnD,oBAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;;AAE/C,uBAAK,IAAI,CAAC,cAAc,EAAE,CAAC;AAC3B,kBAAE,CAAC,GAAG,CAAC,uBAAuB,GAAG,OAAK,UAAU,GAAG,SAAS,GAAG,KAAK,GAAG,aAAa,GAAG,KAAK,CAAC,CAAC;;;;AAI9F,oBAAI,WAAW,EAAE,OAAK,IAAI,CAAC,cAAc,EAAE,CAAC;AAC5C,uBAAK,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;;SAG1E;KACJ;;AAED,YAAQ,EAAE,kBAAS,QAAQ,EAAE,SAAS,EAAE,YAAY,EAAE,aAAa,EAAE,IAAI,EAAE;AACvE,YAAI,IAAI,KAAK,SAAS,EAAE,IAAI,GAAG,EAAE,CAAC;AAClC,YAAI,CAAC,EAAE,CAAC,YAAY,CAAC,WAAW,CAAC,QAAQ,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE;;AAElE,gBAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACvB,mBAAO,IAAI,CAAC;SACf;AACD,YAAI,YAAY,GAAG,EAAE,CAAC;AACtB,YAAI,aAAa,GAAG,EAAE,CAAC;AACvB,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,gBAAI,EAAE,CAAC,YAAY,CAAC,WAAW,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,EAAE;AACvE,4BAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aACtC,MAAM;AACH,6BAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aACvC;SAEJ;;;;;;AAMD,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,gBAAI,IAAI,KAAK,SAAS,EAAE,IAAI,GAAG,EAAE,CAAC;;AAElC,gBAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,YAAY,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAClG,gBAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;;AAEzB,0BAAU,GAAG,IAAI,CAAC;;aAErB,MAAM;AACH,wBAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;AAC9B,6BAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxC,sCAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;yBACjC;AACD,4BAAI,GAAG,UAAU,CAAC;qBACrB,MAAM;AACH,kCAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,4BAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;qBACxB;iBACJ;;;;SAMJ;;AAED,eAAO,IAAI,CAAC;KAEf;AACD,aAAS,EAAE,mBAAS,KAAK,EAAE;AACvB,YAAI,CAAC,GAAG,CAAC,CAAC;AACV,YAAI,WAAW,GAAG,CAAC,CAAC;AACpB,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnC,gBAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACpB,gBAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,IAAI,EAAE,SAAS;AAClD,gBAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACrB,oBAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;aACzC,MAAM;;AAEH,oBAAI,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,IAAI,CAAC;AACtE,qBAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;AACvC,uBAAO,KAAK,CAAC;aAChB;;AAED,gBAAI,QAAQ,GAAG,CAAC,CAAC;AACjB,iBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACtC,wBAAQ,IAAI,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAClD;AACD,gBAAI,QAAQ,GAAG,WAAW,EAAE;AACxB,2BAAW,GAAG,QAAQ,CAAC;AACvB,iBAAC,GAAG,CAAC,CAAC;aACT;SACJ;;AAED,aAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACjB,eAAO,KAAK,CAAC,CAAC,CAAC,CAAC;KACnB;;AAED,UAAM,EAAE,gBAAS,EAAE,EAAE;AACjB,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,YAAI,IAAI,CAAC,UAAU,KAAK,aAAa,CAAC,OAAO,EAAE;;;;AAG3C,gBAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;;AAEvD,gBAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;AACzB,oBAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,KAAK,IAAI,CAAC,YAAY,EAAE;AAC5F,wBAAI,CAAC,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC;iBACxC;aACJ;AACD,gBAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;AACxB,oBAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,KAAK,IAAI,CAAC,YAAY,EAAE;AAClG,wBAAI,CAAC,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC;iBACxC;aACJ;AACD,gBAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;AAC5E,gBAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;SAEhF;;AAED,YAAI,IAAI,CAAC,UAAU,IAAI,aAAa,CAAC,OAAO,EAAE;AAC1C,oBAAQ,IAAI,CAAC,aAAa;;AAEtB,qBAAK,EAAE,CAAC,GAAG,CAAC,IAAI;AACZ,wBAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;AAC1B,0BAAM;AAAA,AACV,qBAAK,EAAE,CAAC,GAAG,CAAC,KAAK;AACb,wBAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;AAC1B,0BAAM;AAAA,AACV,qBAAK,EAAE,CAAC,GAAG,CAAC,EAAE;AACV,wBAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;AAC1B,0BAAM;AAAA,AACV,qBAAK,EAAE,CAAC,GAAG,CAAC,IAAI;AACZ,wBAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;AAC1B,0BAAM;AAAA,aACb;SACJ;;;AAGD,YAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,GAAG,CAAA,GAAI,CAAC,EAAE;AACtD,gBAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,GAAG,CAAA,GAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAEpF;;AAED,YAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAA,GAAI,CAAC,EAAE;AACtD,gBAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,CAAA,GAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAErF;KAEJ;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "var FishRunStatus = cc.Enum({\n    stop: 0,\n    control: 1,\n    find: 2,\n    random: 3\n});\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        //运行性，0~1之间，越小越爱动\n        move_rate: 0.4,\n        max_seed: 10,\n        speed: 10,\n        turn_speed: 5,\n        idle_time: 5,\n        favorite: false,\n        star: cc.Node,\n        lure: {\n            type: cc.Node,\n            default: null\n        }\n    },\n\n    onLoad: function() {\n        let self = this;\n        this.run_status = FishRunStatus.stop;\n        /*   \n        鱼的特性：\n        1.自己游，会停一会儿，再游\n        2.会找离自己最近的饵\n        3.饵的出现会让鱼向其游近\n        */\n        // add key down and key up event\n\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n\n        this.anim = this.getComponent(cc.Animation);\n        this.moveDirection = null;\n        this.sprite = this.getComponent(cc.Sprite);\n\n        //每5秒想一下，是不是要游\n        this.schedule(function() {\n            cc.log('fish status:' + self.run_status);\n            //从停止状态 进入 自由运动\n            if (self.run_status === FishRunStatus.stop) {\n                //某种属性，是不是爱动 \n                if (Math.random() > this.move_rate)\n                    self.randomRun();\n            }\n        }, self.idle_time * Math.random());\n    },\n    init: function(properties) {\n        //合并一些属性 mixin?\n        cc.log(this);\n        cc.js.mixin(this, properties);\n        //this.favorite=properties.favorite;\n\n\n        if (!this.favorite) {\n            this.star.active = false;\n        }\n        cc.log('this.node.parent');\n        cc.log(this.node.parent);\n        // cc.log(this);\n    },\n\n    destroy() {\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onKeyDown: function(event) {\n        let self = this;\n        let dirction_rotation = 0;\n        if (event.keyCode !== this.moveDirection) {\n            switch (event.keyCode) {\n                case cc.KEY.left:\n\n                    // this.countRotation(270);\n                    dirction_rotation = 270;\n\n                    break;\n                case cc.KEY.right:\n\n                    dirction_rotation = 90;\n\n                    break;\n                case cc.KEY.up:\n\n                    dirction_rotation = 0;\n                    // this.anim.play('fish_up');\n                    break;\n                case cc.KEY.down:\n                    dirction_rotation = 180;\n                    break;\n                case cc.KEY.space:\n                    // cc.log('dd'+this.lure);\n                    this.eatAction();\n                    return;\n\n\n\n\n            }\n            cc.log('this.moveDirection:' + this.moveDirection);\n            this.actionControl(dirction_rotation, event.keyCode);\n        }\n\n        //this.countRotation(dirction_rotation);\n        this.moveDirection = event.keyCode;\n    },\n    countAngle: function(target, self) {\n        let len_y = target.y - self.y;\n        let len_x = target.x - self.x;\n\n        let tan_yx = Math.abs(len_y) / Math.abs(len_x);\n        let angle = 0;\n        if (len_y > 0 && len_x < 0) {\n            angle = Math.atan(tan_yx) * 180 / Math.PI - 90;\n        } else if (len_y > 0 && len_x > 0) {\n            angle = 90 - Math.atan(tan_yx) * 180 / Math.PI;\n        } else if (len_y < 0 && len_x < 0) {\n            angle = -Math.atan(tan_yx) * 180 / Math.PI - 90;\n        } else if (len_y < 0 && len_x > 0) {\n            angle = Math.atan(tan_yx) * 180 / Math.PI + 90;\n        }\n        return angle;\n    },\n    eatAction: function() {\n\n        if (this.lure) {\n            if (!this.lure.isValid) {\n                this.wantEatThink();\n            }\n            if (this.lure == undefined || !this.lure || this.lure === null || !this.lure.isValid) {\n                //在追的过程中，饵因为某种原因没了，\n                this.run_status = FishRunStatus.stop;\n                return;\n            }\n\n            cc.log(' want eat ' + this.lure.uuid + ' ' + this.lure.x);\n            let self = this;\n            // let len_y = this.lure.y - this.node.y;\n            // let len_x = this.lure.x - this.node.x;\n\n            // let tan_yx = Math.abs(len_y) / Math.abs(len_x);\n            // let angle = 0;\n            // if (len_y > 0 && len_x < 0) {\n            //     angle = Math.atan(tan_yx) * 180 / Math.PI - 90;\n            // } else if (len_y > 0 && len_x > 0) {\n            //     angle = 90 - Math.atan(tan_yx) * 180 / Math.PI;\n            // } else if (len_y < 0 && len_x < 0) {\n            //     angle = -Math.atan(tan_yx) * 180 / Math.PI - 90;\n            // } else if (len_y < 0 && len_x > 0) {\n            //     angle = Math.atan(tan_yx) * 180 / Math.PI + 90;\n            // }\n            let angle = this.countAngle(this.lure, this.node);\n            //  cc.log('angle:'+angle); \n\n            let x_ = Math.cos(angle) * this.speed;\n            let y_ = Math.sin(angle) * this.speed;\n            // cc.log('x_,y_:'+x_+','+y_);\n\n            let finished = cc.callFunc(function(target, ind) {\n                //cc.log('finished');\n                self.node.stopAllActions();\n                // cc.log('this.lure:'+this.lure.position.x);\n                if (this.lure.isValid) {\n                    //如果饵还在，继续吃\n                    self.eatAction();\n                } else {\n                    //找另一个饵\n                    let canvasScript = cc.find('Canvas').getComponent('Game');\n                    if (canvasScript.lures.length > 0) {\n                        self.wantEatThink(canvasScript.lures);\n                        // cc.log(' find '+canvasScript.lures[0].uuid);\n                        // self.lure=canvasScript.lures[0];\n                        // self.eatAction();\n                    } else {\n                        self.run_status = FishRunStatus.stop;\n                    }\n\n                }\n            }, this, 0);\n            //这个时间要变化 \n            let distance = cc.pDistance(this.node.getPosition(), this.lure.getPosition());\n            let speed = this.max_seed * 0.5;\n            if (distance < 200) {\n                speed = this.max_seed * 0.15;\n            }\n            if (distance < 80) {\n                speed = this.max_seed * 0.01;\n            }\n            cc.log('new speed:' + speed);\n            let rotateTo = cc.rotateTo(speed / 2, angle); //cc.rotateTo(0.5, angle);\n            let followAction = cc.moveTo(speed, this.lure);\n            this.node.stopAllActions();\n            //学习的过程，当撞到后，记录了障碍，再思考时要考虑障碍\n            // if (self.pathPolygons) {\n            //     let paths = self.findPath(self.node.getPosition(), self.lure.getPosition(), self.pathPolygons, self.stonePolygons, []);\n            //     let path = self.shortPath(paths);\n            //     if (path === undefined || path === null) {\n            //         cc.log('direct path');\n\n            //     } else {\n            //         cc.log(paths);\n            //         cc.log('find path with stone ');\n            //         cc.log(path);\n\n            //         followAction = cc.cardinalSplineTo(speed,[cc.p(-202,0),cc.p(0,0)],0);//cc.cardinalSplineTo(speed, path, 0); //tension紧张度，要考量一下\n            //         rotateTo = cc.rotateTo(speed , angle);\n            //         this.node.runAction(cc.spawn(followAction, cc.sequence(rotateTo, finished)));\n            //         return;\n            //     }\n            // }\n            this.node.runAction(cc.spawn(followAction, cc.sequence(rotateTo, finished)));\n\n            // followAction.easing(cc.easeQuarticActionIn());\n\n            //停止之前的动作，转而执行下面的动作\n\n\n            return;\n        } else {\n            this.run_status = FishRunStatus.stop;\n            return;\n        }\n    },\n    //任意游//也可能停下来\n    randomRun: function() {\n        let self = this;\n        let x = -cc.winSize.width / 2 + cc.winSize.width * Math.random();\n        let y = -cc.winSize.height / 2 + (cc.winSize.height - 100) * Math.random();\n        let speed = this.max_seed * (Math.random() * 0.8 + 0.2);\n        cc.log('fish random run ' + x + ',' + y + ' at ' + speed);\n        let moveTo = cc.moveTo(speed, cc.p(x, y));\n\n        let finished = cc.callFunc(function(target, ind) {\n            self.run_status = FishRunStatus.stop;\n        });\n        let angle = this.countAngle(cc.p(x, y), this.node);\n        cc.log('angle:' + angle);\n\n        let rotateTo = cc.rotateTo(0.25 + Math.random() * 2, angle);\n        this.run_status = FishRunStatus.random; //状态变化了\n        let randomAction = cc.spawn(rotateTo, cc.sequence(moveTo, finished));\n        randomAction.setTag(FishRunStatus.random);\n        // cc.log(randomAction);\n        this.node.runAction(randomAction);\n\n\n    },\n    //对所有饵进行评估，找到最想吃最近的一个\n    wantEatThink: function(lures) {\n        if (lures === null) {\n            lures = cc.find('Canvas').getComponent('Game').lures; //node\n            cc.log('find lures from canvas');\n        }\n        cc.log('lures:');\n        cc.log(lures);\n        if (!lures) {\n            cc.log('undefined lures');\n            return;\n        }\n        if (lures.length > 0) {\n            this.run_status = FishRunStatus.find; //find lure\n        }\n        let distance = 9999;\n        //对于距离差不多的，是不是随机处理呢？还是让两只鱼撞在一起？\n        for (var i = 0; i < lures.length; i++) {\n            let distance_ = cc.pDistance(this.node.getPosition(), lures[i].getPosition());\n            if (distance > distance_) {\n                distance = distance_;\n                this.lure = lures[i];\n            }\n            \n        }\n        cc.log(' find ' + this.lure.uuid);\n        this.eatAction();\n    },\n    //键盘控制，暂时不要了\n    actionControl: function(dirction_rotation, code) {\n        let x = this.node.position.x;\n        let y = this.node.position.y;\n        // cc.log('be x,y:' + x + ' ' + y + ' ' + code);\n        let rotateTo = cc.rotateTo(0.5, dirction_rotation);\n        rotateTo.easing(cc.easeElasticOut());\n        let x_ = x;\n        let y_ = y;\n        switch (code) {\n\n            case cc.KEY.left:\n                x_ = x - 10;\n                break;\n            case cc.KEY.right:\n                x_ = x + 10;\n                break;\n            case cc.KEY.up:\n                y_ = y + 10;\n                break;\n            case cc.KEY.down:\n                y_ = y - 10;\n                break;\n        }\n        //cc.log(x_ + ' : ' + y_);\n        let bezierTo = cc.moveTo(1.5, cc.p(x_, y_)); //,cc.p(x-30,y+20),cc.p(x-40,y)]); \n        bezierTo.easing(cc.easeElasticIn());\n        // bezierTo.easing(cc.easeCubicActionIn());     //cc.bezierTo(2,[cc.p(x,y),cc.p(x+40,y+40),cc.p(x,y+80),cc.p(x-40,y+40),cc.p(x,y)]);\n        this.node.runAction(cc.spawn(rotateTo, bezierTo));\n    },\n\n    countRotation: function(dirction_rotation) {\n        this.run_status = FishRunStatus.control; //running\n        this.start_rotation = this.node.rotation;\n        this.end_rotation = dirction_rotation;\n        this.clockwise = 1;\n        //方向第一次计算\n        let dvalue = this.end_rotation - this.start_rotation;\n        if (dvalue === 0 || dvalue === 360) this.run_status = FishRunStatus.stop;\n        if (dvalue < 0) this.clockwise = -this.clockwise;\n        //要转的角度\n        if (Math.abs(this.end_rotation - this.start_rotation) > 180) {\n            this.turn_rotation = 360 - Math.abs(this.end_rotation - this.start_rotation);\n            //方向第二次计算\n            this.clockwise = -this.clockwise;\n        } else {\n            this.turn_rotation = Math.abs(this.end_rotation - this.start_rotation); //要转的角度\n        }\n        //   cc.log(this.turn_rotation);\n        //   cc.log(this.clockwise);\n        //   cc.log(this.node.rotation);\n        //cc.log(convertToWorldSpaceAR this.node.position);\n    },\n\n    onKeyUp: function(event) {\n        if (event.keyCode === this.moveDirection) {\n            this.moveDirection = null;\n        }\n    },\n\n    onCollisionEnter: function(other, self) {\n        if (other.node.group === 'stoneG') {\n            cc.log('fish knock stone' + other.node.group);\n            cc.log(other);\n            //碰到鱼\n            //记忆障碍\n            if (this.stonePolygons === undefined) {\n                let polygons = [];\n                let canvas = cc.find('Canvas');\n                for (var i = 0; i < other.points.length; i++) {\n                    polygons[i] = canvas.convertToNodeSpaceAR(other.world.points[i]);\n                }\n                this.stonePolygons = polygons;\n                cc.log('memo the stonePolygons');\n            }\n            //鱼要改变行动路线\n            this.strategyRun(other.node);\n        }\n        if (other.node.group === 'pathG' && this.pathPolygons === undefined) {\n            cc.log('memo the pathPolygons');\n            let polygons = [];\n            let canvas = cc.find('Canvas');\n            for (var i = 0; i < other.points.length; i++) {\n                polygons[i] = canvas.convertToNodeSpaceAR(other.world.points[i]);\n            }\n            this.pathPolygons = polygons;\n        }\n        if(other.node.group === 'fishG'){\n            //如果是鱼与鱼相撞\n            this.strategyRun(other.node,0.15,0.3,true,50);\n        }\n\n    },\n    //反弹的AI逻辑\n    strategyRun: function(other, tempSpeed, tempRotateSpeed, immediately,range) {\n        let self = this;\n        //当前是有目标的游，还是闲游\n        if (self.run_status === FishRunStatus.random || self.run_status === FishRunStatus.find || self.run_status === FishRunStatus.stop) {\n\n            // let x_range = Math.abs(cc.winSize.width / 2 - Math.abs(self.node.x));\n            // let y_range = Math.abs(cc.winSize.height / 2 - Math.abs(self.node.y) - 100);\n            // let x = self.node.x + x_range * Math.random();\n            // let y = self.node.y + y_range * Math.random();\n            let x_range  = 100 + 50 * Math.random();\n            let y_range = 100 + 50 * Math.random();\n            if(range){\n                x_range = range*Math.random();\n                y_range = range*Math.random();\n            }\n\n            let run_status_org = self.run_status;\n            let x, y;\n            if (other.x >= self.node.x) {\n\n                x = self.node.x - x_range; //-cc.winSize.width / 2 + x_range * Math.random();\n\n\n            } else {\n                x = self.node.x + x_range;\n            }\n            if (other.y >= self.node.y) {\n                y = self.node.y - y_range; //-cc.winSize.height / 2 + y_range * Math.random();\n            } else {\n                y = self.node.y + y_range;\n            }\n\n            cc.log('after knock then want ' + x + ',' + y);\n\n\n\n            let speed = this.max_seed * (Math.random() * 0.8 + 0.2);\n            if (tempSpeed) speed = tempSpeed;\n            let moveTo = cc.moveTo(speed, cc.p(x, y));\n            //   x=50+cc.winSize.width/2*Math.random();\n            //   y=50+cc.winSize.height/2*Math.random();\n            // var mng = cc.director.getActionManager();\n            // cc.log(mng.getActionByTag(FishRunStatus.random,this.node));\n            // moveTo=cc.reverseTime(mng.getActionByTag(FishRunStatus.random,this.node));\n\n            // let moveBy = cc.moveBy(speed, cc.p(x, y));\n            let finished = cc.callFunc(function(target, ind) {\n                if (run_status_org === FishRunStatus.random) {\n                    self.run_status = FishRunStatus.stop;\n                }\n                if (run_status_org === FishRunStatus.find) {\n                    self.run_status = run_status_org;\n                    //饵没有丢，还想着\n                    ////驱散完了，应该重新找目标\n                    self.wantEatThink(null);\n                    //self.eatAction();\n                }\n\n            });\n            cc.log('other angle:' + this.countAngle(this.node.convertToNodeSpace(cc.p(x, y)), cc.p(0, 0)) + \" | \" + this.countAngle(cc.p(x, y), this.node));\n            let angle = this.countAngle(cc.p(x, y), this.node);\n            // angle=(angle>180?540-this.node.rotation:this.node.rotation-90);\n            let rotateSpeed = this.turn_speed * Math.random() + 0.2;\n            if (tempRotateSpeed) rotateSpeed = tempRotateSpeed;\n            let rotateTo = cc.rotateTo(rotateSpeed, angle);\n            //先停下原来正在进行的动作（导致碰撞的）\n            this.node.stopAllActions();\n            cc.log('knock run and status:' + this.run_status + ' speed:' + speed + ' and angle:' + angle);\n            //向另一个方向运动\n            // self.run_status=FishRunStatus.random;\n            // \n            if (immediately) this.node.stopAllActions();\n            this.node.runAction(cc.spawn(rotateTo, cc.sequence(moveTo, finished)));\n\n\n        }\n    },\n    //假设暂时只有一个障碍物\n    findPath: function(startPos, targetPos, pathPolygons, stonePolygons, path) {\n        if (path === undefined) path = [];\n        if (!cc.Intersection.linePolygon(startPos, targetPos, stonePolygons)) {\n\n            path.unshift(startPos);\n            return path;\n        }\n        let tempPolygons = [];\n        let tempPolygons_ = [];\n        for (var i = 0; i < pathPolygons.length; i++) {\n            if (cc.Intersection.linePolygon(startPos, pathPolygons[i], stonePolygons)) {\n                tempPolygons.push(pathPolygons[i]);\n            } else {\n                tempPolygons_.push(pathPolygons[i]);\n            }\n\n        }\n        // if(tempPolygons_.length>1){\n        //let len=path.length;\n        // if (tempPolygons_.length === 0) {\n\n        // }\n        for (var i = 0; i < tempPolygons_.length; i++) {\n            if (path === undefined) path = [];\n\n            let pathBranch = this.findPath(tempPolygons_[i], targetPos, tempPolygons, stonePolygons, path[i]);\n            if (pathBranch.length === 0) {\n                //cc.log(path);\n                pathBranch = null;\n                //return null;\n            } else {\n                if (Array.isArray(pathBranch[0])) {\n                    for (var n = 0; n < pathBranch.length; n++) {\n                        pathBranch[n].push(targetPos);\n                    }\n                    path = pathBranch;\n                } else {\n                    pathBranch.unshift(startPos);\n                    path[i] = pathBranch;\n                }\n            }\n\n\n\n            //path.concat(path,pathBranch);\n            //path[len + i] = this.findPath_(tempPolygons_[i],targetPos,tempPolygons,stonePolygons,path[i]);\n        }\n\n        return path;\n\n    },\n    shortPath: function(paths) {\n        let s = 0;\n        let maxDistance = 0;\n        for (var i = 0; i < paths.length; i++) {\n            let path = paths[i];\n            if (path === undefined || path === null) continue;\n            if (Array.isArray(path)) {\n                path.unshift(this.node.getPosition());\n            } else {\n\n                if (cc.pDistance(paths[0], this.node.getPosition()) == 0) return null;\n                paths.unshift(this.node.getPosition());\n                return paths;\n            }\n\n            let distance = 0;\n            for (var n = 0; n < path.length - 1; n++) {\n                distance += cc.pDistance(path[n], path[n + 1]);\n            }\n            if (distance > maxDistance) {\n                maxDistance = distance;\n                s = i;\n            }\n        }\n\n        paths[s].shift();\n        return paths[s];\n    },\n\n    update: function(dt) {\n        let self = this;\n        if (this.run_status === FishRunStatus.control) { //在运动中的话\n\n            // cc.log('curr_rotation:'+this.node.rotation+' end_rotation:'+this.end_rotation+' this.speed:'+this.speed);\n            this.node.rotation += this.turn_speed * this.clockwise;\n\n            if (this.node.rotation >= 0) {\n                if (this.node.rotation === this.end_rotation || this.node.rotation - 360 === this.end_rotation) {\n                    this.run_status = FishRunStatus.stop;\n                }\n            }\n            if (this.node.rotation < 0) {\n                if (360 + this.node.rotation === this.end_rotation || this.node.rotation + 360 === this.end_rotation) {\n                    this.run_status = FishRunStatus.stop;\n                }\n            }\n            if (this.node.rotation > 360) this.node.rotation = this.node.rotation - 360;\n            if (this.node.rotation < -360) this.node.rotation = this.node.rotation + 360;\n\n        }\n        // cc.log('status:' + this.run_status);\n        if (this.run_status != FishRunStatus.control) {\n            switch (this.moveDirection) {\n\n                case cc.KEY.left:\n                    this.node.x -= this.speed;\n                    break;\n                case cc.KEY.right:\n                    this.node.x += this.speed;\n                    break;\n                case cc.KEY.up:\n                    this.node.y += this.speed;\n                    break;\n                case cc.KEY.down:\n                    this.node.y -= this.speed;\n                    break;\n            }\n        }\n\n        // this.node.x=-400;\n        if (Math.abs(this.node.x) > (cc.winSize.width - 100) / 2) {\n            this.node.x = (cc.winSize.width - 100) / 2 * this.node.x / Math.abs(this.node.x);\n\n        }\n        //cc.log(this.node.x + \" \" + this.node.x);\n        if (Math.abs(this.node.y) > (cc.winSize.height - 10) / 2) {\n            this.node.y = (cc.winSize.height - 100) / 2 * this.node.y / Math.abs(this.node.y);\n\n        }\n\n    }\n});"
  ]
}