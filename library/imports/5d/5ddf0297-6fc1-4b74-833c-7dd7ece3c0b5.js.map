{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "//可不可以做成公共的\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        // 增加还是减少\r\n        isGrowUp: true,\r\n        // 是否是时分秒\r\n        isClock: true,\r\n\r\n        totaltime: 20,\r\n\r\n        initTime: 0\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function() {\r\n        this.label = this.getComponent(cc.Label);\r\n        //this.init();\r\n    },\r\n    init: function(initTime) {\r\n        this.unscheduleAllCallbacks(); \r\n        let self = this;\r\n        var type = function(o) {\r\n            var s = Object.prototype.toString.call(o);\r\n            return s.match(/\\[object (.*?)\\]/)[1].toLowerCase();\r\n        };\r\n        if (type(initTime) === 'number') self.initTime = initTime;\r\n        this.label.string = self.formatSeconds(self.initTime);\r\n        //cc.log('start timer!');\r\n        this.callback = this.schedule(function() {\r\n            self.label.string = self.formatSeconds(self.initTime);\r\n            if (self.isGrowUp) {\r\n                self.initTime++;\r\n            } else {\r\n                self.initTime--;\r\n            }\r\n\r\n            if (self.initTime < 0) {\r\n                //告诉主控，时间到\r\n                self.node.dispatchEvent(new cc.Event.EventCustom('time_up', true));\r\n                self.unscheduleAllCallbacks(); //(self.callback);\r\n\r\n            }\r\n            if (self.initTime > self.totaltime) {\r\n                self.node.dispatchEvent(new cc.Event.EventCustom('time_up', true));\r\n                self.unscheduleAllCallbacks(); //(self.callback);\r\n            }\r\n        }, 1);\r\n    },\r\n    formatSeconds: function(value) {\r\n\r\n        var theTime = parseInt(value); // 秒\r\n\r\n        var theTime1 = 0; // 分\r\n\r\n        var theTime2 = 0; // 小时\r\n\r\n        if (theTime > 60) {\r\n\r\n            theTime1 = parseInt(theTime / 60);\r\n\r\n            theTime = parseInt(theTime % 60);\r\n\r\n            if (theTime1 > 60) {\r\n\r\n                theTime2 = parseInt(theTime1 / 60);\r\n\r\n                theTime1 = parseInt(theTime1 % 60);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var result = \"\" + parseInt(theTime) + \"秒\";\r\n\r\n        if (theTime1 > 0) {\r\n\r\n            result = \"\" + parseInt(theTime1) + \"分\" + result;\r\n\r\n        }\r\n\r\n        if (theTime2 > 0) {\r\n\r\n            result = \"\" + parseInt(theTime2) + \"小时\" + result;\r\n\r\n        }\r\n\r\n        return result;\r\n\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});"
  ]
}