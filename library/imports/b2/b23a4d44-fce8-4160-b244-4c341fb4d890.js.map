{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        star1: cc.Node,\r\n        star2: cc.Node,\r\n        star3: cc.Node,\r\n        stageString: cc.Node,\r\n        stageScore: cc.Node,\r\n        stageBestScore: cc.Node\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function() {\r\n\r\n    },\r\n    init: function(result) {\r\n        let self = this;\r\n        //result.time\r\n        //result.eatlureCount \r\n        //result.stage\r\n        let stage = result.stage;\r\n        self.stage = stage;\r\n        self.stageString.getComponent(cc.Label).string = \"第\" + stage + \"关\";\r\n        self.currStage = result;\r\n        self.stageScore.getComponent(cc.Label).string = result.score;\r\n        self.getStars(result.score);\r\n        let stagestring = cc.sys.localStorage.getItem('stage' + stage);\r\n        if (stagestring) {\r\n            let stageStorage = JSON.parse(stagestring);\r\n\r\n            self.stageBestScore.getComponent(cc.Label).string = stageStorage.bestScore;\r\n            self.bestScore = stageStorage.bestScore;\r\n\r\n        } else {\r\n            self.bestScore = 0;\r\n        }\r\n \r\n    },\r\n    getStars: function(score) {\r\n        let self = this;\r\n        let stagesData = cc.find('Canvas').getComponent('Game').stagesData;\r\n        for (var i = 0; i < stagesData.length; i++) {\r\n            if (stagesData[i].stage === self.stage) {\r\n                if (score >= stagesData[i].star1) {\r\n                    this.star1.color = new cc.Color(255, 255, 255);\r\n                } else {\r\n                    this.star1.color = new cc.Color(100, 100, 100);\r\n                }\r\n                if (score >= stagesData[i].star2) {\r\n                    this.star2.color = new cc.Color(255, 255, 255);\r\n                } else {\r\n                    this.star2.color = new cc.Color(100, 100, 100);\r\n                }\r\n                if (score >= stagesData[i].star3) {\r\n                    this.star3.color = new cc.Color(255, 255, 255);\r\n                } else {\r\n                    this.star3.color = new cc.Color(100, 100, 100);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    },\r\n    //下一关\r\n    command: function(event, customEventData) {\r\n        let self = this;\r\n        self.saveData();\r\n        cc.log(customEventData);\r\n        self.node.dispatchEvent(new cc.Event.EventCustom(customEventData, true));\r\n        self.node.active = false;\r\n    },\r\n    // menu: function() {\r\n    //     let self = this;\r\n    //     self.saveData();\r\n    //     self.node.dispatchEvent(new cc.Event.EventCustom('menu', true));\r\n    //     self.node.active = false;\r\n    // },\r\n    saveData: function() {\r\n        let self = this;\r\n        //保存本关数据\r\n        if (self.currStage.score > self.bestScore) {\r\n            self.bestScore = self.currStage.score;\r\n        }\r\n        let stageJson = {\r\n            bestScore: self.bestScore\r\n        }\r\n        cc.sys.localStorage.setItem('stage' + self.stage, JSON.stringify(stageJson));\r\n    },\r\n    // reload:function(){\r\n    //     let self = this;\r\n    //     self.saveData();\r\n    //     self.node.dispatchEvent(new cc.Event.EventCustom('reload', true));\r\n    //     self.node.active = false;\r\n    // },\r\n    //暂时简单计算，只算未被吃到的饵数\r\n    countStar: function(eatLureCount, throwLureCount) {\r\n        let score = throwLureCount - eatLureCount;\r\n        if (score === 0) {\r\n\r\n        }\r\n        if (score > 0 && score <= 3) {\r\n\r\n        }\r\n        if (score > 3) {\r\n\r\n        }\r\n        //最后利用game的功能读取localstorage保存结果\r\n    }\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});"
  ]
}